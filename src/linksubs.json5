{
    // ahash
    "crate::std::collections::HashMap":
    "https://doc.rust-lang.org/stable/std/collections/struct.HashMap.html",
    "crate::std::collections::HashSet":
    "https://doc.rust-lang.org/stable/std/collections/struct.HashSet.html",
    "crate::std::hash::Hasher":
    "https://doc.rust-lang.org/stable/std/hash/trait.Hasher.html",
    "crate::ahash::AHasher":
    "https://docs.rs/ahash/latest/ahash/struct.AHasher.html",
    "crate::ahash::AHashMap":
    "https://docs.rs/ahash/latest/ahash/struct.AHashMap.html",

    // anyhow
    "crate::thiserror":
    "https://docs.rs/thiserror",
    "crate::anyhow::anyhow":
    "https://docs.rs/anyhow/latest/anyhow/macro.anyhow.html",
    "crate::anyhow::bail":
    "https://docs.rs/anyhow/latest/anyhow/macro.bail.html",
    "crate::anyhow::Error":
    "https://docs.rs/anyhow/latest/anyhow/struct.Error.html",
    "crate::anyhow::Result":
    "https://docs.rs/anyhow/latest/anyhow/type.Result.html",
    "crate::anyhow::Context":
    "https://docs.rs/anyhow/latest/anyhow/trait.Context.html",
    "crate::anyhow::Context::context":
    "https://docs.rs/anyhow/latest/anyhow/trait.Context.html#tymethod.context",
    "crate::std::error::Error":
    "https://doc.rust-lang.org/stable/std/error/trait.Error.html",

    // bytes
    "crate::bytes::Bytes":
    "https://docs.rs/bytes/latest/bytes/struct.Bytes.html",
    "crate::bytes::BytesMut":
    "https://docs.rs/bytes/latest/bytes/struct.BytesMut.html",
    "crate::bytes::Buf":
    "https://docs.rs/bytes/latest/bytes/trait.Buf.html",
    "crate::bytes::BufMut":
    "https://docs.rs/bytes/latest/bytes/trait.BufMut.html",

    // chrono
    "crate::chrono::NaiveDate":
    "https://docs.rs/chrono/latest/chrono/naive/struct.NaiveDate.html",
    "crate::chrono::NaiveTime":
    "https://docs.rs/chrono/latest/chrono/naive/struct.NaiveTime.html",
    "crate::chrono::NaiveDateTime":
    "https://docs.rs/chrono/latest/chrono/naive/struct.NaiveDateTime.html",
    "crate::chrono::DateTime":
    "https://docs.rs/chrono/latest/chrono/struct.DateTime.html",
    "crate::chrono::TimeZone":
    "https://docs.rs/chrono/latest/chrono/trait.TimeZone.html",
    "crate::jiff":
    "https://docs.rs/jiff",

    // jiff
    "crate::jiff::Timestamp":
    "https://docs.rs/jiff/latest/jiff/struct.Timestamp.html",
    "crate::jiff::Zoned":
    "https://docs.rs/jiff/latest/jiff/struct.Zoned.html",
    "crate::jiff::civil::DateTime":
    "https://docs.rs/jiff/latest/jiff/civil/struct.DateTime.html",
    "crate::jiff::civil::Date":
    "https://docs.rs/jiff/latest/jiff/civil/struct.Date.html",
    "crate::jiff::civil::Time":
    "https://docs.rs/jiff/latest/jiff/civil/struct.Time.html",

    // serde
    "crate::serde::Serialize":
    "https://docs.rs/serde/latest/serde/trait.Serialize.html",
    "crate::serde::Deserialize":
    "https://docs.rs/serde/latest/serde/trait.Deserialize.html",
    "crate::serde_json":
    "https://docs.rs/serde_json",

    // tokio
    "crate::tokio::runtime::Runtime":
    "https://docs.rs/tokio/latest/tokio/runtime/struct.Runtime.html",
    "crate::tokio::main":
    "https://docs.rs/tokio/latest/tokio/attr.main.html",
    "crate::tokio::net::TcpListener":
    "https://docs.rs/tokio/latest/tokio/net/struct.TcpListener.html",
    "crate::tokio::net::TcpStream":
    "https://docs.rs/tokio/latest/tokio/net/struct.TcpStream.html",

    // regex
    "crate::regex::Regex":
    "https://docs.rs/regex/latest/regex/struct.Regex.html",
    "crate::regex::Regex::new":
    "https://docs.rs/regex/latest/regex/struct.Regex.html#method.new",
    "crate::regex::Regex::is_match":
    "https://docs.rs/regex/latest/regex/struct.Regex.html#method.is_match",

    // itertools
    "crate::itertools::Itertools":
    "https://docs.rs/itertools/latest/itertools/trait.Itertools.html",
    "crate::itertools::Itertools::group_by":
    "https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.group_by",
    "crate::itertools::Itertools::chunks":
    "https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.chunks",
    "crate::itertools::Itertools::sorted":
    "https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.sorted",
    "crate::itertools::Itertools::dedup":
    "https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.dedup",
    "crate::itertools::Itertools::intersperse":
    "https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.intersperse",
    "crate::itertools::Itertools::cartesian_product":
    "https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.cartesian_product",
    "crate::itertools::zip_eq":
    "https://docs.rs/itertools/latest/itertools/fn.zip_eq.html",
    "crate::itertools::repeat_n":
    "https://docs.rs/itertools/latest/itertools/fn.repeat_n.html",

    // log
    "crate::log::error":
    "https://docs.rs/log/latest/log/macro.error.html",
    "crate::log::warn":
    "https://docs.rs/log/latest/log/macro.warn.html",
    "crate::log::info":
    "https://docs.rs/log/latest/log/macro.info.html",
    "crate::log::debug":
    "https://docs.rs/log/latest/log/macro.debug.html",
    "crate::log::trace":
    "https://docs.rs/log/latest/log/macro.trace.html",
    "crate::env_logger":
    "https://docs.rs/env_logger",
    "crate::simplelog":
    "https://docs.rs/simplelog",
    "crate::fern":
    "https://docs.rs/fern",
    "crate::tracing-subscriber":
    "https://docs.rs/tracing-subscriber",

    // thiserror
    "crate::thiserror::Error":
    "https://docs.rs/thiserror/latest/thiserror/derive.Error.html",
    "crate::std::fmt::Display":
    "https://doc.rust-lang.org/stable/std/fmt/trait.Display.html",
    "crate::std::convert::From":
    "https://doc.rust-lang.org/stable/std/convert/trait.From.html",
    "crate::anyhow":
    "https://docs.rs/anyhow",

    // clap
    "crate::clap::Parser":
    "https://docs.rs/clap/latest/clap/trait.Parser.html",
    "crate::clap::Subcommand":
    "https://docs.rs/clap/latest/clap/trait.Subcommand.html",
    "crate::clap::Command":
    "https://docs.rs/clap/latest/clap/struct.Command.html",
    "crate::clap::Arg":
    "https://docs.rs/clap/latest/clap/struct.Arg.html",

    // rayon
    "crate::rayon::iter::ParallelIterator":
    "https://docs.rs/rayon/latest/rayon/iter/trait.ParallelIterator.html",
    "crate::rayon::slice::ParallelSlice":
    "https://docs.rs/rayon/latest/rayon/slice/trait.ParallelSlice.html",
    "crate::rayon::iter::ParallelIterator::map":
    "https://docs.rs/rayon/latest/rayon/iter/trait.ParallelIterator.html#method.map",
    "crate::rayon::iter::ParallelIterator::filter":
    "https://docs.rs/rayon/latest/rayon/iter/trait.ParallelIterator.html#method.filter",
    "crate::rayon::iter::ParallelIterator::reduce":
    "https://docs.rs/rayon/latest/rayon/iter/trait.ParallelIterator.html#method.reduce",
    "crate::rayon::slice::ParallelSliceMut::par_sort":
    "https://docs.rs/rayon/latest/rayon/slice/trait.ParallelSliceMut.html#method.par_sort",
    "crate::rayon::join":
    "https://docs.rs/rayon/latest/rayon/fn.join.html",
    "crate::rayon::scope":
    "https://docs.rs/rayon/latest/rayon/fn.scope.html",
    "crate::rayon::ThreadPool":
    "https://docs.rs/rayon/latest/rayon/struct.ThreadPool.html",

}

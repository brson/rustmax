{
    // ahash
    "crate::std::collections::HashMap":
    "https://doc.rust-lang.org/stable/std/collections/struct.HashMap.html",
    "crate::std::collections::HashSet":
    "https://doc.rust-lang.org/stable/std/collections/struct.HashSet.html",
    "crate::std::hash::Hasher":
    "https://doc.rust-lang.org/stable/std/hash/trait.Hasher.html",
    "crate::ahash::AHasher":
    "https://docs.rs/ahash/latest/ahash/struct.AHasher.html",
    "crate::ahash::AHashMap":
    "https://docs.rs/ahash/latest/ahash/struct.AHashMap.html",

    // anyhow
    "crate::thiserror":
    "https://docs.rs/thiserror",
    "crate::anyhow::anyhow":
    "https://docs.rs/anyhow/latest/anyhow/macro.anyhow.html",
    "crate::anyhow::bail":
    "https://docs.rs/anyhow/latest/anyhow/macro.bail.html",
    "crate::anyhow::Error":
    "https://docs.rs/anyhow/latest/anyhow/struct.Error.html",
    "crate::anyhow::Result":
    "https://docs.rs/anyhow/latest/anyhow/type.Result.html",
    "crate::anyhow::Context":
    "https://docs.rs/anyhow/latest/anyhow/trait.Context.html",
    "crate::anyhow::Context::context":
    "https://docs.rs/anyhow/latest/anyhow/trait.Context.html#tymethod.context",
    "crate::std::error::Error":
    "https://doc.rust-lang.org/stable/std/error/trait.Error.html",

    // bytes
    "crate::bytes::Bytes":
    "https://docs.rs/bytes/latest/bytes/struct.Bytes.html",
    "crate::bytes::BytesMut":
    "https://docs.rs/bytes/latest/bytes/struct.BytesMut.html",
    "crate::bytes::Buf":
    "https://docs.rs/bytes/latest/bytes/trait.Buf.html",
    "crate::bytes::BufMut":
    "https://docs.rs/bytes/latest/bytes/trait.BufMut.html",

    // futures
    "crate::futures::Future":
    "https://docs.rs/futures/latest/futures/future/trait.Future.html",
    "crate::futures::Stream":
    "https://docs.rs/futures/latest/futures/stream/trait.Stream.html",
    "crate::futures::Sink":
    "https://docs.rs/futures/latest/futures/sink/trait.Sink.html",
    "crate::futures::future":
    "https://docs.rs/futures/latest/futures/future/index.html",
    "crate::futures::stream":
    "https://docs.rs/futures/latest/futures/stream/index.html",
    "crate::futures::sink":
    "https://docs.rs/futures/latest/futures/sink/index.html",
    "crate::futures::executor":
    "https://docs.rs/futures/latest/futures/executor/index.html",
    "crate::futures::channel":
    "https://docs.rs/futures/latest/futures/channel/index.html",
    "crate::futures::channel::mpsc":
    "https://docs.rs/futures/latest/futures/channel/mpsc/index.html",
    "crate::futures::channel::oneshot":
    "https://docs.rs/futures/latest/futures/channel/oneshot/index.html",

    // chrono
    "crate::chrono::NaiveDate":
    "https://docs.rs/chrono/latest/chrono/naive/struct.NaiveDate.html",
    "crate::chrono::NaiveTime":
    "https://docs.rs/chrono/latest/chrono/naive/struct.NaiveTime.html",
    "crate::chrono::NaiveDateTime":
    "https://docs.rs/chrono/latest/chrono/naive/struct.NaiveDateTime.html",
    "crate::chrono::DateTime":
    "https://docs.rs/chrono/latest/chrono/struct.DateTime.html",
    "crate::chrono::TimeZone":
    "https://docs.rs/chrono/latest/chrono/trait.TimeZone.html",
    "crate::jiff":
    "https://docs.rs/jiff",

    // jiff
    "crate::jiff::Timestamp":
    "https://docs.rs/jiff/latest/jiff/struct.Timestamp.html",
    "crate::jiff::Zoned":
    "https://docs.rs/jiff/latest/jiff/struct.Zoned.html",
    "crate::jiff::civil::DateTime":
    "https://docs.rs/jiff/latest/jiff/civil/struct.DateTime.html",
    "crate::jiff::civil::Date":
    "https://docs.rs/jiff/latest/jiff/civil/struct.Date.html",
    "crate::jiff::civil::Time":
    "https://docs.rs/jiff/latest/jiff/civil/struct.Time.html",

    // serde
    "crate::serde":
    "https://docs.rs/serde",
    "crate::serde::Serialize":
    "https://docs.rs/serde/latest/serde/trait.Serialize.html",
    "crate::serde::Deserialize":
    "https://docs.rs/serde/latest/serde/trait.Deserialize.html",
    "crate::serde_json":
    "https://docs.rs/serde_json",

    // tokio
    "crate::tokio::runtime::Runtime":
    "https://docs.rs/tokio/latest/tokio/runtime/struct.Runtime.html",
    "crate::tokio::main":
    "https://docs.rs/tokio/latest/tokio/attr.main.html",
    "crate::tokio::net::TcpListener":
    "https://docs.rs/tokio/latest/tokio/net/struct.TcpListener.html",
    "crate::tokio::net::TcpStream":
    "https://docs.rs/tokio/latest/tokio/net/struct.TcpStream.html",

    // regex
    "crate::regex::Regex":
    "https://docs.rs/regex/latest/regex/struct.Regex.html",
    "crate::regex::Regex::new":
    "https://docs.rs/regex/latest/regex/struct.Regex.html#method.new",
    "crate::regex::Regex::is_match":
    "https://docs.rs/regex/latest/regex/struct.Regex.html#method.is_match",

    // itertools
    "crate::itertools::Itertools":
    "https://docs.rs/itertools/latest/itertools/trait.Itertools.html",
    "crate::itertools::Itertools::group_by":
    "https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.group_by",
    "crate::itertools::Itertools::chunks":
    "https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.chunks",
    "crate::itertools::Itertools::sorted":
    "https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.sorted",
    "crate::itertools::Itertools::dedup":
    "https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.dedup",
    "crate::itertools::Itertools::intersperse":
    "https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.intersperse",
    "crate::itertools::Itertools::cartesian_product":
    "https://docs.rs/itertools/latest/itertools/trait.Itertools.html#method.cartesian_product",
    "crate::itertools::zip_eq":
    "https://docs.rs/itertools/latest/itertools/fn.zip_eq.html",
    "crate::itertools::repeat_n":
    "https://docs.rs/itertools/latest/itertools/fn.repeat_n.html",

    // log
    "crate::log::error":
    "https://docs.rs/log/latest/log/macro.error.html",
    "crate::log::warn":
    "https://docs.rs/log/latest/log/macro.warn.html",
    "crate::log::info":
    "https://docs.rs/log/latest/log/macro.info.html",
    "crate::log::debug":
    "https://docs.rs/log/latest/log/macro.debug.html",
    "crate::log::trace":
    "https://docs.rs/log/latest/log/macro.trace.html",
    "crate::env_logger":
    "https://docs.rs/env_logger",
    "crate::simplelog":
    "https://docs.rs/simplelog",
    "crate::fern":
    "https://docs.rs/fern",
    "crate::tracing-subscriber":
    "https://docs.rs/tracing-subscriber",

    // thiserror
    "crate::thiserror::Error":
    "https://docs.rs/thiserror/latest/thiserror/derive.Error.html",
    "crate::std::fmt::Display":
    "https://doc.rust-lang.org/stable/std/fmt/trait.Display.html",
    "crate::std::convert::From":
    "https://doc.rust-lang.org/stable/std/convert/trait.From.html",
    "crate::anyhow":
    "https://docs.rs/anyhow",

    // clap
    "crate::clap::Parser":
    "https://docs.rs/clap/latest/clap/trait.Parser.html",
    "crate::clap::Subcommand":
    "https://docs.rs/clap/latest/clap/trait.Subcommand.html",
    "crate::clap::Command":
    "https://docs.rs/clap/latest/clap/struct.Command.html",
    "crate::clap::Arg":
    "https://docs.rs/clap/latest/clap/struct.Arg.html",

    // rayon
    "crate::rayon::iter::ParallelIterator":
    "https://docs.rs/rayon/latest/rayon/iter/trait.ParallelIterator.html",
    "crate::rayon::slice::ParallelSlice":
    "https://docs.rs/rayon/latest/rayon/slice/trait.ParallelSlice.html",
    "crate::rayon::iter::ParallelIterator::map":
    "https://docs.rs/rayon/latest/rayon/iter/trait.ParallelIterator.html#method.map",
    "crate::rayon::iter::ParallelIterator::filter":
    "https://docs.rs/rayon/latest/rayon/iter/trait.ParallelIterator.html#method.filter",
    "crate::rayon::iter::ParallelIterator::reduce":
    "https://docs.rs/rayon/latest/rayon/iter/trait.ParallelIterator.html#method.reduce",
    "crate::rayon::slice::ParallelSliceMut::par_sort":
    "https://docs.rs/rayon/latest/rayon/slice/trait.ParallelSliceMut.html#method.par_sort",
    "crate::rayon::join":
    "https://docs.rs/rayon/latest/rayon/fn.join.html",
    "crate::rayon::scope":
    "https://docs.rs/rayon/latest/rayon/fn.scope.html",
    "crate::rayon::ThreadPool":
    "https://docs.rs/rayon/latest/rayon/struct.ThreadPool.html",

    // num-bigint
    "crate::num_bigint::BigInt":
    "https://docs.rs/num-bigint/latest/num_bigint/struct.BigInt.html",
    "crate::num_bigint::BigUint":
    "https://docs.rs/num-bigint/latest/num_bigint/struct.BigUint.html",

    // base64
    "crate::base64::encode":
    "https://docs.rs/base64/latest/base64/fn.encode.html",
    "crate::base64::decode":
    "https://docs.rs/base64/latest/base64/fn.decode.html",
    "crate::base64::Engine":
    "https://docs.rs/base64/latest/base64/trait.Engine.html",

    // serde_json
    "crate::serde_json::to_string":
    "https://docs.rs/serde_json/latest/serde_json/fn.to_string.html",
    "crate::serde_json::from_str":
    "https://docs.rs/serde_json/latest/serde_json/fn.from_str.html",
    "crate::serde_json::to_writer":
    "https://docs.rs/serde_json/latest/serde_json/fn.to_writer.html",
    "crate::serde_json::from_reader":
    "https://docs.rs/serde_json/latest/serde_json/fn.from_reader.html",
    "crate::serde_json::to_value":
    "https://docs.rs/serde_json/latest/serde_json/fn.to_value.html",
    "crate::serde_json::from_value":
    "https://docs.rs/serde_json/latest/serde_json/fn.from_value.html",
    "crate::serde_json::Value":
    "https://docs.rs/serde_json/latest/serde_json/enum.Value.html",

    // rand
    "crate::rand::rng":
    "https://docs.rs/rand/latest/rand/fn.rng.html",
    "crate::rand::Rng":
    "https://docs.rs/rand/latest/rand/trait.Rng.html",
    "crate::rand::random":
    "https://docs.rs/rand/latest/rand/fn.random.html",
    "crate::rand::RngCore":
    "https://docs.rs/rand/latest/rand/trait.RngCore.html",
    "crate::rand::SeedableRng":
    "https://docs.rs/rand/latest/rand/trait.SeedableRng.html",
    "crate::rand::rngs::StdRng":
    "https://docs.rs/rand/latest/rand/rngs/struct.StdRng.html",
    "crate::rand::rngs::SmallRng":
    "https://docs.rs/rand/latest/rand/rngs/struct.SmallRng.html",
    "crate::rand_chacha":
    "https://docs.rs/rand_chacha",
    "crate::rand_pcg":
    "https://docs.rs/rand_pcg",
    "crate::rand_chacha::ChaCha12Rng":
    "https://docs.rs/rand_chacha/latest/rand_chacha/struct.ChaCha12Rng.html",
    "crate::rand_pcg::Pcg64":
    "https://docs.rs/rand_pcg/latest/rand_pcg/type.Pcg64.html",

    // hex
    "crate::hex::encode":
    "https://docs.rs/hex/latest/hex/fn.encode.html",
    "crate::hex::decode":
    "https://docs.rs/hex/latest/hex/fn.decode.html",
    "crate::hex::encode_upper":
    "https://docs.rs/hex/latest/hex/fn.encode_upper.html",

    // mime
    "crate::mime::Mime":
    "https://docs.rs/mime/latest/mime/struct.Mime.html",
    "crate::mime::TEXT_PLAIN":
    "https://docs.rs/mime/latest/mime/constant.TEXT_PLAIN.html",
    "crate::mime::APPLICATION_JSON":
    "https://docs.rs/mime/latest/mime/constant.APPLICATION_JSON.html",

    // semver
    "crate::semver::Version":
    "https://docs.rs/semver/latest/semver/struct.Version.html",
    "crate::semver::VersionReq":
    "https://docs.rs/semver/latest/semver/struct.VersionReq.html",
    "crate::semver::Version::parse":
    "https://docs.rs/semver/latest/semver/struct.Version.html#method.parse",
    "https://semver.org/":
    "https://semver.org/",
    "https://doc.rust-lang.org/cargo/reference/semver.html":
    "https://doc.rust-lang.org/cargo/reference/semver.html",

    // tempfile
    "crate::tempfile::tempfile":
    "https://docs.rs/tempfile/latest/tempfile/fn.tempfile.html",
    "crate::tempfile::NamedTempFile":
    "https://docs.rs/tempfile/latest/tempfile/struct.NamedTempFile.html",
    "crate::tempfile::TempDir":
    "https://docs.rs/tempfile/latest/tempfile/struct.TempDir.html",
    "crate::tempfile::spooled_tempfile":
    "https://docs.rs/tempfile/latest/tempfile/fn.spooled_tempfile.html",

    // toml
    "crate::toml::Value":
    "https://docs.rs/toml/latest/toml/enum.Value.html",
    "crate::toml::from_str":
    "https://docs.rs/toml/latest/toml/fn.from_str.html",
    "crate::toml::to_string":
    "https://docs.rs/toml/latest/toml/fn.to_string.html",

    // url
    "crate::url::Url":
    "https://docs.rs/url/latest/url/struct.Url.html",
    "crate::url::Url::parse":
    "https://docs.rs/url/latest/url/struct.Url.html#method.parse",
    "crate::url::Url::join":
    "https://docs.rs/url/latest/url/struct.Url.html#method.join",

    // walkdir
    "crate::walkdir::WalkDir":
    "https://docs.rs/walkdir/latest/walkdir/struct.WalkDir.html",
    "crate::walkdir::WalkDir::new":
    "https://docs.rs/walkdir/latest/walkdir/struct.WalkDir.html#method.new",
    "crate::walkdir::WalkDir::max_depth":
    "https://docs.rs/walkdir/latest/walkdir/struct.WalkDir.html#method.max_depth",

    // proptest
    "crate::proptest::strategy::Strategy":
    "https://docs.rs/proptest/latest/proptest/strategy/trait.Strategy.html",
    "crate::proptest::proptest":
    "https://docs.rs/proptest/latest/proptest/macro.proptest.html",
    "crate::proptest::prop_assert":
    "https://docs.rs/proptest/latest/proptest/macro.prop_assert.html",

}

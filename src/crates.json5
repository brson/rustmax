{
    crates: [
        {
            name: "ahash",
            category: "collections",
            short_desc: "Fast hash maps",
            oneline_desc: "A fast and DOS-resistent hash function, for use in `HashMap`s",
        },
        {
            name: "anyhow",
            category: "errors",
            short_desc: "Easy error handling",
            oneline_desc: "Flexible error handling for applications",
        },
        {
            name: "axum",
            category: "web",
            short_desc: "Web framework",
            oneline_desc: " Web application framework based on [`tokio`](#rmxl-tokio)",
        },
        {
            name: "backtrace",
            category: "errors",
            short_desc: "Stack traces",
            oneline_desc: "Callstack backtraces on demand",
        },
        {
            name: "base64",
            category: "encoding",
            short_desc: "Base-64 encoding and decoding",
            oneline_desc: "Base-64 encoding and decoding",
        },
        {
            name: "bindgen",
            category: "ffi",
            short_desc: "C/C++ interop",
            oneline_desc: "Generate Rust bindings to C and C++ libraries",
        },
        {
            name: "bitflags",
            category: "collections",
            short_desc: "Bitfields",
            oneline_desc: "Types in which the bits are individually addressable",
        },
        {
            name: "blake3",
            category: "cryptography",
            short_desc: "Cryptographic hashing",
            oneline_desc: "The BLAKE3 cryptographic hash function",
        },
        {
            name: "byteorder",
            category: "encoding",
            short_desc: "Big/little endianness",
            oneline_desc: "Big-endian and little-endian encoding",
        },
        {
            name: "bytes",
            category: "collections",
            short_desc: "Byte buffers",
            oneline_desc: "Abstractions for working with byte buffers: [`Bytes`](bytes::Bytes), [`Buf`](bytes::Buf), and [`BufMut`](bytes::BufMut)",
        },
        {
            name: "cc",
            category: "ffi",
            short_desc: "Compile C/C++ files",
            oneline_desc: "A basic cross-platform C/C++ compiler driver",
        },
        {
            name: "cfg-if",
            category: "convenience",
            short_desc: "Compile-time control flow",
            oneline_desc: "A macro for writing conditional compilation as `if` / `else` blocks",
        },
        {
            name: "chrono",
            category: "time",
            short_desc: "Dates and time (legacy)",
            oneline_desc: "Dates and time (legacy)",
        },
        {
            name: "clap",
            category: "cli",
            short_desc: "Command-line parsing",
            oneline_desc: "Command-line parsing",
        },
        {
            name: "crossbeam",
            category: "parallelism",
            short_desc: "Fast channels, etc.",
            oneline_desc: "Concurrency tools to supplement [`std::sync`](#rmxl-std-sync), including fast channels",
        },
        {
            name: "ctrlc",
            category: "cli",
            short_desc: "Handle Ctrl+C",
            oneline_desc: "Simple handling of Ctrl-C for CLI programs",
        },
        {
            name: "cxx",
            category: "ffi",
            short_desc: "Bridging to/from C++",
            oneline_desc: "todo",
        },
        {
            name: "cxx-build",
            category: "ffi",
            short_desc: "Bridging to/from C++",
            oneline_desc: "todo",
        },
        {
            name: "derive_more",
            category: "convenience",
            short_desc: "More standard trait derives",
            oneline_desc: "todo",
        },
        {
            name: "env_logger",
            category: "errors",
            short_desc: "Simple logging",
            oneline_desc: "todo",
        },
        {
            name: "extension-trait",
            category: "conveniences",
            short_desc: "Define methods for out-of-crate types",
            oneline_desc: "todo",
        },
        {
            name: "futures",
            category: "async",
            short_desc: "Basic async definitions and helpers",
            oneline_desc: "todo",
        },
        {
            name: "hex",
            category: "encoding",
            short_desc: "Hexidecimal encoding",
            oneline_desc: "todo",
        },
        {
            name: "http",
            category: "web",
            short_desc: "Shared HTTP definitions",
            oneline_desc: "todo",
        },
        {
            name: "hyper",
            category: "web",
            short_desc: "HTTP server",
            oneline_desc: "todo",
        },
        {
            name: "itertools",
            category: "collections",
            short_desc: "Advanced iterator extension methods",
            oneline_desc: "Extra iterator methods and utilities for functional programming",
        },
        {
            name: "jiff",
            category: "time",
            short_desc: "Dates and time",
            oneline_desc: "Dates and time",
        },
        {
            name: "json5",
            category: "encoding",
            short_desc: "JSON with comments, etc.",
            oneline_desc: "todo",
        },
        {
            name: "libc",
            category: "ffi",
            short_desc: "C interop",
            oneline_desc: "todo",
        },
        {
            name: "log",
            category: "errors",
            short_desc: "Simple logging",
            oneline_desc: "todo",
        },
        {
            name: "mime",
            category: "web",
            short_desc: "Shared MIME definitions",
            oneline_desc: "todo",
        },
        {
            name: "nom",
            category: "encoding",
            short_desc: "Parser combinators",
            oneline_desc: "todo",
        },
        {
            name: "num-bigint",
            category: "numbers",
            short_desc: "Big integers",
            oneline_desc: "todo",
        },
        {
            name: "num_cpus",
            category: "system",
            short_desc: "Get number of CPUs",
            oneline_desc: "todo",
        },
        {
            name: "num_enum",
            category: "convenienc",
            short_desc: "Number-enum interop",
            oneline_desc: "todo",
        },
        {
            name: "proc-macro2",
            category: "proc-macro",
            short_desc: "Additional support for procedural macros",
            oneline_desc: "todo",
        },
        {
            name: "proptest",
            category: "testing",
            short_desc: "Property testing",
            oneline_desc: "todo",
        },
        {
            name: "quote",
            category: "proc-macro",
            short_desc: "Quasiquoter for proceducal macros",
            oneline_desc: "todo",
        },
        {
            name: "rand",
            category: "rand",
            short_desc: "Random numbers",
            oneline_desc: "todo",
        },
        {
            name: "rand_chacha",
            category: "rand",
            short_desc: "Secure random numbers",
            oneline_desc: "todo",
        },
        {
            name: "rand_pcg",
            category: "rand",
            short_desc: "Fast random numbers",
            oneline_desc: "todo",
        },
        {
            name: "rayon",
            category: "parallelism",
            short_desc: "Parallel iterators, etc.",
            oneline_desc: "todo",
        },
        {
            name: "regex",
            category: "encoding",
            short_desc: "Regular expressions",
            oneline_desc: "Regular expression engine with support for Unicode",
        },
        {
            name: "reqwest",
            category: "web",
            short_desc: "HTTP requests, both async and blocking",
            oneline_desc: "todo",
        },
        {
            name: "rustyline",
            category: "cli",
            short_desc: "Line reading for console apps",
            oneline_desc: "todo",
        },
        {
            name: "semver",
            category: "deployment",
            short_desc: "Semantic versioning",
            oneline_desc: "The software versioning standard used by Rust",
        },
        {
            name: "serde",
            category: "encoding",
            short_desc: "Standard serialization",
            oneline_desc: "todo",
        },
        {
            name: "serde_json",
            category: "encoding",
            short_desc: "JSON",
            oneline_desc: "todo",
        },
        {
            name: "sha2",
            category: "cryptography",
            short_desc: "Cryptographic hashing",
            oneline_desc: "todo",
        },
        {
            name: "socket2",
            category: "web",
            short_desc: "Low-level sockets",
            oneline_desc: "todo",
        },
        {
            name: "static_assertions",
            category: "testing",
            short_desc: "Compile-time assertions",
            oneline_desc: "Compile-time assertions about constants, types, etc",
        },
        {
            name: "syn",
            category: "proc-macro",
            short_desc: "Parsing for procedural macros",
            oneline_desc: "todo",
        },
        {
            name: "tempfile",
            category: "system",
            short_desc: "Temporary files and directories",
            oneline_desc: "todo",
        },
        {
            name: "tera",
            category: "web",
            short_desc: "Text templates, as for websites",
            oneline_desc: "todo",
        },
        {
            name: "termcolor",
            category: "cli",
            short_desc: "Terminal colors",
            oneline_desc: "todo",
        },
        {
            name: "thiserror",
            category: "errors",
            short_desc: "Precise error handling",
            oneline_desc: "todo",
        },
        {
            name: "tokio",
            category: "async",
            short_desc: "The asyncronous runtime",
            oneline_desc: "todo",
        },
        {
            name: "toml",
            category: "encoding",
            short_desc: "TOML serialization",
            oneline_desc: "todo",
        },
        {
            name: "tower",
            category: "web",
            short_desc: "Middleware for tokio",
            oneline_desc: "todo",
        },
        {
            name: "unicode-segmentation",
            category: "text",
            short_desc: "Graphemes, words and sentences for Unicode",
            oneline_desc: "todo",
        },
        {
            name: "url",
            category: "web",
            short_desc: "URL parsing",
            oneline_desc: "todo",
        },
        {
            name: "walkdir",
            category: "system",
            short_desc: "Directory traversal",
            oneline_desc: "todo",
        },
        {
            name: "xshell",
            category: "system",
            short_desc: "Easy shell-like command execution",
            oneline_desc: "todo",
        },
    ]
}
